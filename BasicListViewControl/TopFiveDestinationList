import java.awt.*;
import javax.swing.*;
import javax.swing.border.*;
import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.RowSpec;
import net.miginfocom.swing.MigLayout;
import javax.swing.GroupLayout.Alignment;
// Sources:
// Hawaii Picture #1 on list: Source - https://commons.wikimedia.org/wiki/File:Safari_Explorer_in_Hawaii.jpg
// Attributed to Un-Cruise Adventures, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons
// License: https://creativecommons.org/licenses/by-sa/3.0/deed.en
// Revisions made - 

// Ireland Picture #2 on list: Source - https://commons.wikimedia.org/wiki/File:North_Wall_Quay_Dublin_Ireland_Cityscape_Photography_(169960849).jpeg 
// License: https://creativecommons.org/licenses/by/3.0/deed.en
// Atrributed to Giuseppe Milo, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons
// Revisions made - 

// India Picture #3 on list: Source - https://creativecommons.org/licenses/by-sa/3.0/deed.en , https://commons.wikimedia.org/wiki/File:Vail_Vacation_Home_1.jpg
// License: https://creativecommons.org/licenses/by/3.0/deed.en
// Atributed to Haleybutlerhs, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons
// Revisions made - 

// Iceland picture #4 on list: Source - https://commons.wikimedia.org/wiki/File:Iceland_(154567307).jpeg
// License: https://creativecommons.org/licenses/by/3.0/deed.en
// Attributed to Justin Laberge, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons
// Revisions made - 

// Africa picture #5 on list: Source - https://commons.wikimedia.org/wiki/File:IMG-20191226-WA0020.jpg
// License: https://creativecommons.org/licenses/by-sa/4.0/deed.en
// Attributed to Alhabiib kiks, CC BY-SA 4.0 <https://creativecommons.org/licenses/by-sa/4.0>, via Wikimedia Commons
// Revisions made - 

//Sources of descriptions of destinations:
// Hawaii description source: Holmes, A. (2007, January 1). 3 key reasons all great leaders have mentors. 3 Key Reasons All Great Leaders Have Mentors. Retrieved July 4, 2022, from https://www.mentorresources.com/mentoring-blog/3-key-reasons-all-great-leaders-have-mentors 
// Ireland description source: Edwards, R. Walter Dudley , Fanning, . Ronan , Ranelagh, . John O'Beirne , Kay, . Sean and Boland, . Frederick Henry (2022, July 6). Ireland. Encyclopedia Britannica. https://www.britannica.com/place/Ireland
// India description source: Champakalakshmi, R. , Allchin, . Frank Raymond , Srivastava, . A.L. , Subrahmanyam, . Sanjay , Thapar, . Romila , Calkins, . Philip B. , Wolpert, . Stanley A. , Alam, . Muzaffar , Schwartzberg, . Joseph E. , Spear, . T.G. Percival and Dikshit, . K.R. (2022, July 6). India. Encyclopedia Britannica. https://www.britannica.com/place/India
// Iceland description source: Matthíasson, B. , Karlsson, . Gunnar and Kristinsson, . Valdimar (2021, October 6). Iceland. Encyclopedia Britannica. https://www.britannica.com/place/Iceland
// Africa description source: Steel, R. Walter , Smedley, . Audrey , Middleton, . John F.M. , Dickson, . Kwamina Busumafi , Mabogunje, . Akinlawon Ladipo , Clarke, . John Innes , Nicol, . Davidson S.H.W. , McMaster, . David N. , Gardiner, . Robert K.A. and Kröner, . Alfred (2021, September 28). Africa. Encyclopedia Britannica. https://www.britannica.com/place/Africa

public class TopFiveDestinationList {
	public static void main(String[] args) {
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				// Instantiation of JFrame variable to control the JFrame framework
				TopDestinationListFrame topDestinationListFrame = new TopDestinationListFrame();
				// This changes the background color to specified color
				// In this case, the change was a background color of pink
				// By calling the JFrame object
				// topdestinationlistframe.getContentPane().setBackgroun(color paramater)
				// We can achieve the recommended output for the JLabel background color
				topDestinationListFrame.getContentPane().setBackground(Color.PINK);
				topDestinationListFrame.setTitle("Top 5 Destination List");
				// Allows the JFrame to be visible to the output console or appear on the screen
				topDestinationListFrame.setVisible(true);
			}
		});
	}
}

@SuppressWarnings("serial")
class TopDestinationListFrame extends JFrame {
	private DefaultListModel<TextAndIcon> listModel;

	@SuppressWarnings("unchecked")
	public TopDestinationListFrame() {
		super("Top Five Destination List");

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		setSize(900, 750);

		listModel = new DefaultListModel<TextAndIcon>();

		// Make updates to your top 5 list below. Import the new image files to
		// resources directory.
		addDestinationNameAndPicture("1. Hawaii - Known as the Aloha State, is the world's largest island chain. ",
				new ImageIcon(getClass().getResource("/resources/Hawaii.jpg")));
		addDestinationNameAndPicture(
				"2. Ireland - The magnificent scenery of Ireland’s Atlantic coastline faces a 2,000-mile- (3,200-km-) wide expanse of ocean.",
				new ImageIcon(getClass().getResource(
						"/resources/North_Wall_Quay_Dublin_Ireland_Cityscape_Photography_(169960849).jpeg")));
		addDestinationNameAndPicture(
				"3. India - Country that occupies the greater part of South Asia. Its capital is New Delhi, built in the 20th century just south of the historic hub of Old Delhi to serve as India’s administrative centre.",
				new ImageIcon(getClass().getResource("/resources/Vail_Vacation_Home_1.jpg")));
		addDestinationNameAndPicture(
				"4.Iceland - Sparkling glaciers, such as Vatna Glacier (Vatnajökull), Europe’s largest, lie across its ruggedly beautiful mountain ranges.",
				new ImageIcon(getClass().getResource("/resources/Iceland_(154567307).jpeg")));
		addDestinationNameAndPicture(
				"5. Africa - Off the coasts of Africa a number of islands are associated with the continent;Of these Madagascar, one of the largest islands in the world, is the most significant.",
				new ImageIcon(getClass().getResource("/resources/IMG-20191226-WA0020.jpg")));

		// Creates a JList which is a collection of text and images so that the objects
		// have visible attributes
		// This was required to see the background color. Without this, the scroll pane
		// would have been the only layout visible
		JList<TextAndIcon> list = new JList<TextAndIcon>(listModel);
		JScrollPane scrollPane = new JScrollPane(list);

		TextAndIconListCellRenderer renderer = new TextAndIconListCellRenderer(2);

		// Changes the properties of the JList layout which was selected as Blue
		// This controls the JList properties included within the JFrame
		list.setBackground(Color.YELLOW);
		list.setCellRenderer(renderer);
		// Creates a new JLabel that constructs a name at the top of the JFrame.
		// BorderLayout.North is how this is achieved
		JLabel lblNewLabel = new JLabel("Lawrence Arundel");
		getContentPane().add(lblNewLabel, BorderLayout.NORTH);

		// This is how the scroll pane with pictures and description is able to be seen.
		// BorderLayout.Center is how this is achieved
		getContentPane().add(scrollPane, BorderLayout.CENTER);
	}

	private void addDestinationNameAndPicture(String text, Icon icon) {
		TextAndIcon tai = new TextAndIcon(text, icon);
		listModel.addElement(tai);
	}
}

class TextAndIcon {
	private String text;
	private Icon icon;

	public TextAndIcon(String text, Icon icon) {
		this.text = text;
		this.icon = icon;
	}

	public String getText() {
		return text;
	}

	public Icon getIcon() {
		return icon;
	}

	public void setText(String text) {
		this.text = text;
	}

	public void setIcon(Icon icon) {
		this.icon = icon;
	}
}

class TextAndIconListCellRenderer extends JLabel implements ListCellRenderer {
	private static final Border NO_FOCUS_BORDER = new EmptyBorder(1, 1, 1, 1);

	private Border insideBorder;

	public TextAndIconListCellRenderer() {
		this(0, 0, 0, 0);
	}

	public TextAndIconListCellRenderer(int padding) {
		this(padding, padding, padding, padding);
	}

	public TextAndIconListCellRenderer(int topPadding, int rightPadding, int bottomPadding, int leftPadding) {
		insideBorder = BorderFactory.createEmptyBorder(topPadding, leftPadding, bottomPadding, rightPadding);
		setOpaque(true);
	}

	public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected,
			boolean hasFocus) {
		// The object from the combo box model MUST be a TextAndIcon.
		TextAndIcon tai = (TextAndIcon) value;

		// Sets text and icon on 'this' JLabel.
		setText(tai.getText());
		setIcon(tai.getIcon());

		if (isSelected) {
			setBackground(list.getSelectionBackground());
			setForeground(list.getSelectionForeground());
		} else {
			setBackground(list.getBackground());
			setForeground(list.getForeground());
		}

		Border outsideBorder;

		if (hasFocus) {
			outsideBorder = UIManager.getBorder("List.focusCellHighlightBorder");
		} else {
			outsideBorder = NO_FOCUS_BORDER;
		}

		setBorder(BorderFactory.createCompoundBorder(outsideBorder, insideBorder));
		setComponentOrientation(list.getComponentOrientation());
		setEnabled(list.isEnabled());
		setFont(list.getFont());

		return this;
	}

	// The following methods are overridden to be empty for performance
	// reasons. If you want to understand better why, please read:
	//
	// http://java.sun.com/javase/6/docs/api/javax/swing/DefaultListCellRenderer.html#override

	public void validate() {
	}

	public void invalidate() {
	}

	public void repaint() {
	}

	public void revalidate() {
	}

	public void repaint(long tm, int x, int y, int width, int height) {
	}

	public void repaint(Rectangle r) {
	}
}
